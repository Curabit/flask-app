:root {
    --h-font: "Open Sans";
    --p-font: "Roboto Slab";
    --white-shade: #FBFBFB;
    --blue-accent-1: #03256c;
    --blue-accent-2: #2541b2;
    --blue-accent-3: #1768ac;
    --red-accent-1: #ee4266;
    --yellow-accent-1: #ffd23f;
    --green-accent-1: #0ead69;
}

body {
    background-color: var(--white-shade);
    color: var(--blue-accent-1);
    font-family: var(--p-font), serif;
    margin: 0;
    padding: 0;
    min-height: 100vh;
}

a {
    text-decoration: none;
    color: inherit;
    cursor: pointer;
}

.link-underline:hover {
    text-decoration: underline;
}

h1, h2, h3, h4, h5, h6, p, img {
    padding: 1px;
    margin: 1px;
}

h1, h2, h3, h4, h5, h6 {
    font-family: var(--h-font), sans-serif;
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 0;
    padding: 0;
}

main {
    
    /* Notes from FreeCodeCamp

    flex: flex-grow flex-shrink flex-basis;
    
    flex-shrink: When it's used, it allows an item to shrink if the flex container is too small. 
    Items shrink when the width of the parent container is smaller than the combined widths of all the flex items within it.

    flex-grow: The opposite of flex-shrink is the flex-grow property.
    The flex-grow property controls the size of items when the parent container expands.

    flex-basis: The flex-basis property specifies the initial size of the item before CSS makes adjustments with flex-shrink or flex-grow.
    The units used by the flex-basis property are the same as other size properties (px, em, %, etc.). The value auto sizes items based on the content. */

    flex: 1 0 auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 50%;
}

form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 90%;
}

form label {
    font-weight: 300;
    font-size: 14px;
    margin-bottom: 5px;
}

form input  {
    font-size: 15px;
    margin-bottom: 10px;
    padding: 5px 5px 5px 5px;
}

#form-options {
    width: 80%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin: 5px 0px 15px 0px;
}

#form-options * {
    font-size: 15px;
    font-weight: 400;
    padding: 0;
    margin: 0;
}

.dark-btn {
    font-size: 16px;
    font-weight: 500;
    padding: 5px 15px 5px 15px;
    background-color: var(--blue-accent-1);
    color: var(--white-shade);
    border: 1px solid var(--white-shade);
    border-radius: 5px;
    cursor: pointer;
}

.dark-btn:hover {
    background-color: var(--white-shade);
    color: var(--blue-accent-1);
    border: 1px solid var(--blue-accent-1);
    
}

footer {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    background-color: var(--blue-accent-3);
    padding: 0px 5px 0px 5px;
    color: var(--white-shade);
    width: calc(100% - 10px);
}

#logo {
    height: 30px;
    width: auto;
    margin: 3.5px 0px 3.5px 7.5px;
    filter: brightness(0) saturate(100%) invert(10%) sepia(40%) saturate(6724%) hue-rotate(219deg) brightness(86%) contrast(99%);
}